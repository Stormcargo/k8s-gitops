---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: storage
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    image:
      repository: quay.io/minio/minio
      tag: RELEASE.2023-01-02T09-40-09Z
    env:
      TZ: "Europe/London"
      MINIO_UPDATE: "off"
      # MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
      # MINIO_PROMETHEUS_JOB_ID: minio
      MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DOMAIN}/
      MINIO_SERVER_URL: https://s3.${SECRET_DOMAIN}/
      CONSOLE_MINIO_SERVER: https://minio.${SECRET_DOMAIN}
      MINIO_DOMAIN: "https://s3.${SECRET_DOMAIN}"
      MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
    envFrom:
      - secretRef:
          name: minio
    args: ["server", "/data", "--console-address", ":9001"]
    service:
      main:
        enabled: true
        ports:
          http:
            port: &port-console 9001
          api:
            enabled: true
            port: &port-api 9000
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          # cert-manager.io/cluster-issuer: "letsencrypt-production"
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #  more_set_headers "Access-Control-Allow-Origin: $http_origin";
          # nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
          # nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS, DELETE, PATCH
          # nginx.ingress.kubernetes.io/enable-cors: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:pail
          hajimari.io/group: "storage"
        hosts:
          - host: &console-host "minio.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *port-console
        tls:
          - hosts:
              - *console-host
            secretName: "minio-tls"
      s3:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
          nginx.ingress.kubernetes.io/proxy-body-size: 1024m
          nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            chunked_transfer_encoding off;
          hajimari.io/enable: "false"
        hosts:
          - host: &host-api "s3.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *port-api
        tls:
          - hosts:
              - *host-api
            secretName: "s3-tls"
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
    persistence:
      config:
        enabled: true
        existingClaim: minio-nfs
        mountPath: /data
    podAnnotations:
      secret.reloader.stakater.com/reload: minio
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
