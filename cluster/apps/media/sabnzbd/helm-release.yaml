---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    annotations:
      reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      tag: 4.0.1@sha256:8c1f42be3ae0770ad80921780e22f0cdc09197483752ec13a808a35e60bb5496
    env:
      TZ: Europe/London
      SABNZBD__PORT: &port 80
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.media,
        sabnzbd.media.svc,
        sabnzbd.media.svc.cluster,
        sabnzbd.media.svc.cluster.local,
        sabnzbd.${SECRET_DOMAIN}
    # envFrom:
    #   - secretRef:
    #       name: sabnzbd-secret
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:download
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /mnt/external/Media
        mountPath: /media
        readonly: true
      downloads:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /mnt/external/downloads
        mountPath: /downloads
      incomplete:
        enabled: true
        type: emptyDir
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 8000Mi
