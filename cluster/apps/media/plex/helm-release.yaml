---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.30.1.6562-915986d62@sha256:50315e766947f766b529d6b3ef50f4aef8cc0f96b6c7d9ec0cc3cdf1bdc428de
    envFrom:
      - secretRef:
          name: plex-secret
    env:
      TZ: Europe/London
      PLEX_UID: 0
      PLEX_GID: 0
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${SVC_PLEX_ADDR}"
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          external-dns.home.arpa/enabled: "true"
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "plex.${SECRET_DOMAIN}"
            secretName: "plex-media-tls"
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 44
        - 109
        - 100
        - 1000
    persistence:
      config:
        enabled: true
        storageClass: longhorn
        existingClaim: plex-config-v1
        accessMode: ReadWriteOnce
        size: 25Gi
      tmp:
        enabled: true
        type: emptyDir
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDR}"
        path: /mnt/external/Media
        mountPath: /media
        readonly: true
    nodeSelector:
      intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 10000Mi
