---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 45.0.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 60m
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  maxHistory: 3
  # dependsOn:
  # - name: grafana
  #   namespace: observability
  timeout: 20m
  values:
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations: {}
        hosts:
          - alertmanager.${SECRET_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - alertmanager.${SECRET_DOMAIN}
            secretName: alertmanager-tls
    grafana:
      enabled: false
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
      namespace: kube-system
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.183.200
    coreDns:
      enabled: true
    kubeEtcd:
      enabled: false
      endpoints: []
      # - 192.168.183.200
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.183.200
    kubeProxy:
      enabled: true
      endpoints:
        - 192.168.183.200
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        scrapeInterval: "60s"
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "torch"
          hajimari.io/appName: "Prometheus"
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        paths:
          - /
        pathType: Prefix
        tls:
          - secretName: prometheus--tls
            hosts:
              - prometheus.${SECRET_DOMAIN}
