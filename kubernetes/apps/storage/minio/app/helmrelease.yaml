# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app minio
  namespace: storage
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-04-06T05-26-02Z@sha256:178e05aba3a0dc967df3558aab43097f1427bbcda77264fc24e92f1bf09dfe02
            env:
              TZ: "Europe/London"
              MINIO_UPDATE: "off"
              MINIO_PROMETHEUS_URL: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
              # MINIO_BROWSER_REDIRECT_URL: https://minio.${SECRET_DOMAIN}/
              # MINIO_SERVER_URL: https://minio.${SECRET_DOMAIN}/
              # MINIO_SERVER_HOST: relayone.website
            envFrom:
              - secretRef:
                  name: minio

            args: ["server", "/data", "--console-address", ":9001"]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              runAsUser: 1001
              runAsGroup: 1001
              fsGroup: 1001
              fsGroupChangePolicy: OnRootMismatch
              supplementalGroups: [100]
    service:
      app:
        controller: *app
        ports:
          http:
            port: 9001
          s3:
            port: 9000
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s

    ingress:
      app:
        className: nginx
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &s3-host s3.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: s3
        tls:
          - hosts:
              - *host
              - *s3-host
            secretName: "minio-tls"
    persistence:
      data:
        type: nfs
        server: ${NAS_ADDR}
        path: /mnt/external/minio-store
        globalMounts:
          - path: /data

    # ingress:
    #   app:
    #     className: nginx
    #     # annotations:
    #     #   nginx.ingress.kubernetes.io/configuration-snippet: |
    #     #     more_set_headers "Host $host";
    #     #     more_set_headers "X-Forwarded-For $remote_addr"
    #     hosts:
    #       - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: http
    #     tls:
    #       - hosts:
    #           - *host
    #         secretName: "minio-tls"
    #   s3:
    #     enabled: true
    #     className: nginx
    #     # annotations:
    #     #   nginx.ingress.kubernetes.io/configuration-snippet: |
    #     #     more_set_headers "Host $host";
    #     #     more_set_headers "X-Forwarded-For $remote_addr"
    #     hosts:
    #       - host: &s3Host s3.${SECRET_DOMAIN}
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: s3
    #     tls:
    #       - hosts:
    #           - *s3Host
    #         secretName: "s3-tls"

