---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: media
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sabnzbd
              tag: 4.5.1@sha256:82ad0a30283d02b2dbbb33c9db10c17506f51cfdfeb3e7ba3cfdc601dafec682
            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.media,
                sabnzbd.media.svc,
                sabnzbd.media.svc.cluster,
                sabnzbd.media.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 12Gi

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/icon: "download"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        # tls:
        #   - hosts:
        #       - *host

    persistence:
      config:
        existingClaim: *app
      media:
        type: nfs
        server: ${NAS_ADDR}
        path: /mnt/external
        globalMounts:
          - path: /media
      incomplete:
        enabled: true
        type: emptyDir
      tmp:
        type: emptyDir
